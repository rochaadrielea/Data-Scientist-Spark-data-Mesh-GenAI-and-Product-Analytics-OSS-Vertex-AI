services:
  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports: ["9000:9000", "9001:9001"]
    volumes: ["./.data/minio:/data"]
    networks: [spark-mesh]

  # Postgres for OpenMetadata
  omdb:
    image: postgres:16
    environment:
      POSTGRES_USER: omuser
      POSTGRES_PASSWORD: ompass
      POSTGRES_DB: openmetadata_db
    volumes: ["./.data/omdb:/var/lib/postgresql/data"]
    networks: [spark-mesh]

  openmetadata:
    image: openmetadata/server:1.5.4
    depends_on: [omdb]
    environment:
      DB_HOST: omdb
      DB_USER: omuser
      DB_USER_PASSWORD: ompass
      DB_SCHEMA: openmetadata_db
      DB_DRIVER: postgres
      OM_DATABASE_PORT: "5432"
      ELASTICSEARCH_ENABLED: "false"
      AUTHORIZER_CLASS_NAME: org.openmetadata.service.security.DefaultAuthorizer
    ports: ["8585:8585"]
    networks: [spark-mesh]

  # Marquez lineage backend + its own Postgres (simpler than sharing)
  marquez-db:
    image: postgres:12
    environment:
      POSTGRES_USER: marquez
      POSTGRES_PASSWORD: marquez
      POSTGRES_DB: marquez
    volumes: ["./.data/marquez-db:/var/lib/postgresql/data"]
    networks: [spark-mesh]

  marquez:
    image: marquezproject/marquez:0.53.0
    depends_on: [marquez-db]
    environment:
      MARQUEZ_PORT: "5000"
      MARQUEZ_DB_HOST: marquez-db
      MARQUEZ_DB_PORT: "5432"
      MARQUEZ_DB_USER: marquez
      MARQUEZ_DB_PASSWORD: marquez
      MARQUEZ_DB_NAME: marquez
    ports: ["5000:5000"]
    networks: [spark-mesh]

  marquez-ui:
    image: marquezproject/marquez-web:0.53.0
    depends_on: [marquez]
    environment:
      MARQUEZ_URL: http://localhost:5000
    ports: ["3000:3000"]
    networks: [spark-mesh]

  spark-history:
    image: bitnami/spark:3.5
    depends_on: [minio]
    environment:
      SPARK_HISTORY_OPTS: "-Dspark.history.fs.logDirectory=s3a://spark-events/"
      SPARK_NO_DAEMONIZE: "true"
      AWS_ACCESS_KEY_ID: minioadmin
      AWS_SECRET_ACCESS_KEY: minioadmin
    command: ["/opt/bitnami/spark/sbin/start-history-server.sh"]
    ports: ["18080:18080"]
